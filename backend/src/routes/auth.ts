import express from'express';import p from'../config/database';import{ProprietaryAuth as a}from'../auth/ProprietaryAuth';const r=express.Router();r.post('/register/coach',async(q,s)=>{try{const{email:e,password:w,fullName:f,teamName:t}=q.body;const x=await p.query('SELECT 1 FROM coaches WHERE email=$1',[e]);if(x.rows.length)return s.status(400).json({error:'Email in use'});const h=await a.h(w);const o=await p.query('INSERT INTO coaches (email,password_hash,full_name,team_name,role) VALUES ($1,$2,$3,$4,$5) RETURNING *',[e,h,f,t,'head']);const c=o.rows[0];const k=a.sign({id:c.id,email:c.email,role:c.role});s.status(201).json({token:k,user:{id:c.id,email:c.email,fullName:c.full_name,teamName:c.team_name,role:c.role}})}catch(e){s.status(500).json({error:'Reg failed'})}});r.post('/login',async(q,s)=>{try{const{email:e,password:w}=q.body;const o=await p.query('SELECT * FROM coaches WHERE email=$1',[e]);if(!o.rows.length)return s.status(401).json({error:'Invalid creds'});const c=o.rows[0];if(!await a.v(w,c.password_hash))return s.status(401).json({error:'Invalid creds'});const k=a.sign({id:c.id,email:c.email,role:c.role});s.json({token:k,user:{id:c.id,email:c.email,fullName:c.full_name,teamName:c.team_name,role:c.role}})}catch(e){s.status(500).json({error:'Login failed'})}});export default r;
