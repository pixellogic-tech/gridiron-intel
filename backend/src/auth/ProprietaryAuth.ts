import*as c from'crypto';import*as b from'bcrypt';export class ProprietaryAuth{static readonly s=12;static readonly k=process.env.JWT_SECRET||'s';static async h(p:string){return b.hash(p,this.s)}static async v(p:string,h:string){return b.compare(p,h)}static sign(p:any){const h=Buffer.from(JSON.stringify({alg:'HS256',typ:'JWT'})).toString('base64url');const d=Buffer.from(JSON.stringify(p)).toString('base64url');const s=c.createHmac('sha256',this.k).update(`${h}.${d}`).digest('base64url');return`${h}.${d}.${s}`}static verify(t:string){const[h,p,s]=t.split('.');const sig=c.createHmac('sha256',this.k).update(`${h}.${p}`).digest('base64url');if(s!==sig)throw new Error('Invalid token');return JSON.parse(Buffer.from(p,'base64url').toString())}}
